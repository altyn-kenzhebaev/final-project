worker_processes  1;
error_log /var/log/nginx/error.log;
error_log syslog:server={{ syslog_ip }}:514,tag=nginx_error;
events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log syslog:server={{ syslog_ip }}:514,tag=nginx_access,severity=info combined;

    server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
    	listen 443 ssl http2;
    	listen [::]:443 ssl http2;
        server_name _;
        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/cert.key;
	    ssl_protocols TLSv1.3 TLSv1.2 TLSv1.1 TLSv1;
	    ssl_prefer_server_ciphers on;
	    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
	    ssl_ecdh_curve secp384r1;
	    ssl_session_timeout  10m;
	    ssl_session_cache shared:SSL:10m;
	    ssl_session_tickets off; # Requires nginx >= 1.5.9
	    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	    add_header X-Frame-Options DENY;
	    add_header X-Content-Type-Options nosniff;
	    add_header X-XSS-Protection "1; mode=block";
	    ssl_dhparam /etc/nginx/dhparams.pem;
        
        location / {
            proxy_pass http://{{ clusterip }}:{{ backend_port }};
            proxy_http_version     1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_ssl_session_reuse off;
            proxy_pass_header Server;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 3600;
            proxy_headers_hash_max_size 512;
            proxy_headers_hash_bucket_size 128;
            proxy_set_header Content-Security-Policy upgrade-insecure-requests;
        }

        error_page 404 /404.html;
        location = /404.html {
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

    server {
        listen {{ kibana_ui_port }};
        location / {
           proxy_pass http://{{ syslog_ip }}:{{ kibana_ui_port }};
           proxy_http_version     1.1;
           proxy_set_header Host $host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
           proxy_set_header X-NginX-Proxy true;
	    }
    }

}

