---
- name: "Install NGINX"
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - nginx
    - policycoreutils-python3
    - python3-cryptography

- name: Create private key (RSA, 4096 bits)
  community.crypto.openssl_privatekey:
    path: /etc/nginx/cert.key

- name: Create simple self-signed certificate
  community.crypto.x509_certificate:
    path: /etc/nginx/cert.pem
    privatekey_path: /etc/nginx/cert.key
    provider: selfsigned

- name: Generate Diffie-Hellman parameters with the default size (4096 bits)
  community.crypto.openssl_dhparam:
    path: /etc/nginx/dhparams.pem

- name: "Configure NGINX"
  template:
    dest: /etc/nginx/nginx.conf
    src: nginx.conf.j2
    owner: root
    group: root
    mode: 0644

- name: "Allow nginx reverse proxy communication on SELinux"
  seboolean:
    name: httpd_can_network_connect
    state: yes
    persistent: yes

- name: Allow NGINX to listen kibana_ui_port
  community.general.seport:
    ports: "{{ kibana_ui_port }}"
    proto: tcp
    setype: http_port_t
    state: present

- name: "Start and enable NGINX"
  systemd:
    name: nginx.service
    state: started
    enabled: true

- name: "Configuring firewall services step 1"
  firewalld:
    service: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: yes
  with_items:
    - "http"
    - "https"

- name: "Configuring firewall services step 2"
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: yes
  with_items:
    - 9090/tcp
    - 9093/tcp
    - 3000/tcp
    - "{{ kibana_ui_port }}/tcp"

- name: Set up forward packages across routers
  sysctl:
    name: net.ipv4.conf.all.forwarding
    value: '1'
    sysctl_set: true
    state: present
    reload: true
...